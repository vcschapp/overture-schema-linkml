id: htps://overturemaps.org/schema
name: schema
imports: geometry

classes:
  # =================================
  # DATA CLASSES
  # =================================

  name_common:
    attributes:
      language:
        key: true
        range: language_tag
      value:
        range: string_non_empty_trimmed

  names:
    attributes:
      primary:
        description: Name by which the feature is most commonly called
        required: true
        range: string_non_empty_trimmed
      common:
        description: Known translations of the commonly-used name
        # This modeling mostly works.
        #    - It generates roughly the correct JSON Schema.
        #    - The JSON Schema does validate values.
        #    - However, it does not validate minimum cardinality or keys.
        #    - Apart from this inline slot, the `name_common` class ALSO gets
        #      generated as a separate JSON Schema definition (NameCommon)
        #      which isn't necessary since it's not reachable in the tree, but
        #      that's a small issue.
        #    - The main pain point is lack of validation of minimum cardinality
        #      and keys, which we can live with and file bug fixes for.
        required: false
        multivalued: true
        inlined_as_list: false
        minimum_cardinality: 1
        range: name_common

  # =================================
  # FEATURE TYPES
  # =================================

  feature:
    abstract: true
    slots:
      - id
      - type
      - geometry
      - version
      - theme

  building:
    is_a: feature
    tree_root: true
    slots:
      - names
    slot_usage:
      theme:
        range: theme_buildings

  building_part:
    is_a: feature
    tree_root: true
    slots:
      - building_id
      - names
    slot_usage:
      building_id:
        required: true
      theme:
        range: theme_buildings

slots:
  building_id:
    slot_uri: schema:building_id
    range: building
    inlined: false
    description: Unique ID of an associated building feature
  id:
    identifier: true
    slot_uri: schema:id
    required: true
    range: uuid
    description: Unique ID of the feature
  geometry:
    slot_uri: schema:geometry
    required: true
    range: geometry
    description: OGC simple geometry of the feature
  names:
    slot_uri: schema:names
    required: false
    range: names
    description: Names by which a feature is called
  names_primary:
    slot_uri: schema:names:primary
    alias: primary
    required: true
    range: string_non_empty_trimmed
    description: Most commonly-used name of the feature
  theme:
    slot_uri: schema:theme
    required: true
    range: theme
    description: Overture theme this feature type belongs to
  type:
    slot_uri: schema:type
    required: true
    designates_type: true
    range: string
    description: Feature type, e.g. building or place
  version:
    slot_uri: schema:version
    required: true
    range: integer_positive
    description: >-
        Version number of the feature, incremented in each Overture
        release where the geometry or attributes of the feature
        changed.

types:
  integer_positive:
    description: Integer greater than or equal to 1
    base: int
    minimum_value: 1
  language_tag:
    description: Lexically valid BCP-47 language tag.
    base: str
    pattern: "^(?:(?:[A-Za-z]{2,3}(?:-[A-Za-z]{3}){0,3}?)|(?:[A-Za-z]{4,8}))(?:-[A-Za-z]{4})?(?:-[A-Za-z]{2}|[0-9]{3})?(?:-(?:[A-Za-z0-9]{5,8}|[0-9][A-Za-z0-9]{3}))*(?:-[A-WY-Za-wy-z0-9](?:-[A-Za-z0-9]{2,8})+)*$"
  string:
    description: String value
    base: str
  string_non_empty_trimmed:
    description: Non-empty string without leading or trailing whitespace
    base: string_trimmed
    pattern: ^(\S.*)?\S$
  uuid:
    description: Universally Unique Identifier (UUID)
    base: str
    pattern: "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$"

enums:
  theme:
    description: Overture theme, e.g. buildings or transportation
    permissible_values:
      addresses:
      buildings:
  theme_buildings:
    description: Narrows the theme enumeration to just the buildings theme
    permissible_values:
      buildings:
